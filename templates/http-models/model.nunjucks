/**
 * AUTOGENERATED, DO NOT EDIT DIRECTLY!
 */
{# Remember to include document.title type in the list of imports. #}
{{imports2TS(document.imports, {
"@quenk/jouvert/lib/app/model/http": "http",
"@quenk/noni/lib/data/jsonx": "json",
"@quenk/jhr/lib/agent": ["Agent"]
})}}
{% set classname = document.title + "HttpModel" %}
{% set paths = merge({search: 'invalid', get: 'invalid'}, document.paths or {}) %}

/**
 * {{classname}} remote model (AUTOGENERATED).
 */
export class {{classname}} 
  extends 
  http.SimpleHttpModel<{{document.title}}> {

  static paths = {{ paths | dump }}

  constructor(public agent: Agent<json.Object, json.Object>) {
    super(agent, new http.RequestFactory({{classname}}.paths));
  }

 {% for method,spec in document.methods %}

  {{method}}({{spec.parameters.join(',') if isArray(spec.parameters) else []}}) : {{spec.type}} {
  
    {% if spec.template %}
      {% include spec.template %}
    {% endif %}

  }

 {% endfor -%}

}
