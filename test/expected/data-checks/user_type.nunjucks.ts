/**
 * AUTOGENERATED - DO NOT EDIT DIRECTLY!
 */
 
import { User } from '../data-types/user';
import * as _json from '@quenk/noni/lib/data/jsonx';
import * as _prec from '@quenk/preconditions/lib/async';
import * as _recordPrec from '@quenk/preconditions/lib/async/record';
import * as _arrayPrec from '@quenk/preconditions/lib/async/array';

//@ts-ignore: 6133
const title = "User";
//@ts-ignore: 6133
const collection = "users";

//@ts-ignore: 6133
const _complete = _recordPrec.restrict;

//@ts-ignore: 6133
const _partial = _recordPrec.intersect;

/**
 * DataType checked.
 * 
 * Used by template generation.
 * @private 
 */
export type DataType = User;

/**
 * fieldChecks for User (AUTOGENERATED).
 */ 
export const fieldChecks: _prec.Preconditions<_json.Value, _json.Value> = {

    'id':                _prec.identity
,

    'username': _prec.identity,

    'email': _prec.identity,

    'tags': <_prec.Precondition<_json.Value,_json.Value>>_arrayPrec.map(    _prec.identity
),

    'last_login':                _prec.identity

};

/**
 * partialFieldChecks for User (AUTOGENERATED).
 */ 
export const partialFieldChecks: _prec.Preconditions<_json.Value, _json.Value> = {

    'id':                 _prec.identity
,
    'username': _prec.identity,
    'email': _prec.identity,
    'tags': <_prec.Precondition<_json.Value,_json.Value>>_arrayPrec.map(    _prec.identity
),
    'last_login':                 _prec.identity
};

/**
 * check a value to determine if it is a correct User
 * (AUTOGENERATED).
 */
export const check: _prec.Precondition<_json.Value, User> = 
    _prec.and<_json.Value, User,User>(
      _prec.async<_json.Value, User>(validate),
       _recordPrec.restrict(fieldChecks));

/**
 * checkPartial is like check but only checks the fields encountered.
 * (AUTOGENERATED).
 */
 export const checkPartial: _prec.Precondition<_json.Value, Partial<User>> = 
    _prec.and<_json.Value, User,User>(_prec.async<_json.Value,User>(validatePartial), 
   _recordPrec.intersect(partialFieldChecks));  

